<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.viadee.ki</groupId>
  <artifactId>spark-importer</artifactId>
  <name>bpmn.ai</name>
  <version>1.0-SNAPSHOT</version>
  <description>Tooling to feed Camunda logs into a data mining pipeline.</description>
  <issueManagement>
    <system>Jira</system>
    <url>https://jira.intern.viadee.de/secure/RapidBoard.jspa?rapidView=156</url>
  </issueManagement>
  <ciManagement>
    <system>Jenkins</system>
    <url>https://portal.intern.viadee.de/jenkins/view/KI/job/KI/job/bpmn.ai%20spark%20importer/</url>
  </ciManagement>
  <inceptionYear>2018</inceptionYear>
  <developers>
    <developer>
      <name>Mario Micudaj</name>
      <email>Mario.Micudaj@viadee.de</email>
      <organization>viadee Unternehmensberatung AG</organization>
      <organizationUrl>http://www.viadee.de</organizationUrl>
    </developer>
    <developer>
      <name>Frank Koehne</name>
      <email>Frank.Koehne@viadee.de</email>
      <organization>viadee Unternehmensberatung AG</organization>
      <organizationUrl>http://www.viadee.de</organizationUrl>
    </developer>
  </developers>
  <scm>
    <connection>https://portal.intern.viadee.de/gitlab/viadee/bpmn.ai</connection>
    <url>Gitlab</url>
  </scm>
  <organization>
    <name>viadee Unternehmensberatung GmbH</name>
    <url>www.viadee.de</url>
  </organization>
  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <includes>
                  <include>com.beust:jcommander</include>
                  <include>org.apache.ignite:ignite-core</include>
                  <include>javax.cache:**</include>
                  <include>org.apache.kafka:kafka-clients</include>
                  <include>org.apache.spark:spark-streaming-kafka-0-10_${spark-scala.version}</include>
                </includes>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <failBuildOnCVSS>7</failBuildOnCVSS>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.11</artifactId>
      <version>2.3.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.11</artifactId>
      <version>2.3.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_2.11</artifactId>
      <version>2.3.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.5</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_2.11</artifactId>
      <version>0.11.0.3</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_2.11</artifactId>
      <version>0.11.0.3</version>
      <classifier>test</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>0.11.0.3</version>
      <classifier>test</classifier>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <properties>
    <commons-io.version>2.6</commons-io.version>
    <junit.version>4.12</junit.version>
    <univocity-parsers.version>2.7.5</univocity-parsers.version>
    <gson.version>2.8.5</gson.version>
    <maven.compiler.target>1.8</maven.compiler.target>
    <kafka.version>0.11.0.3</kafka.version>
    <jcommander.version>1.72</jcommander.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <ignite.version>2.6.0</ignite.version>
    <spark.version>2.3.1</spark.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <spark-scala.version>2.11</spark-scala.version>
  </properties>
</project>
